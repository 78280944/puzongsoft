<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lottery.orm.dao.AccountAmountMapper" >
  <resultMap id="BaseResultMap" type="com.lottery.orm.bo.AccountAmount" >
    <id column="AAID" property="aaid" jdbcType="INTEGER" />
    <result column="ACCOUNTID" property="accountid" jdbcType="INTEGER" />
    <result column="LOTTERYTERM" property="lotteryterm" jdbcType="VARCHAR" />
    <result column="LOSS" property="loss" jdbcType="DECIMAL" />
    <result column="EARNS" property="earns" jdbcType="DECIMAL" />
    <result column="GAINS" property="gains" jdbcType="DECIMAL" />
    <result column="PROFITS" property="profits" jdbcType="DECIMAL" />
    <result column="starttime" property="starttime" jdbcType="TIMESTAMP" />
    <result column="overtime" property="overtime" jdbcType="TIMESTAMP" />
  </resultMap>
  
  <resultMap id="ProAccAmountMap" type="com.lottery.orm.dto.ProAccAmountDto" >
    <id column="AAID" property="aaid" jdbcType="INTEGER" />
    <result column="USERNAME" property="username" jdbcType="VARCHAR" />
    <result column="SUPUSERNAME" property="supusername" jdbcType="VARCHAR" />
    <result column="PERCENTAGE" property="percentage" jdbcType="DOUBLE" />
    <result column="LOSS" property="loss" jdbcType="DECIMAL" />
    <result column="EARNS" property="earns" jdbcType="DECIMAL" />
    <result column="GAINS" property="gains" jdbcType="DECIMAL" />
    <result column="PROFITS" property="profits" jdbcType="DECIMAL" />
  </resultMap>
  
  <resultMap id="AccAmountMap" type="com.lottery.orm.dto.AccAmountDto" >
    <id column="AAID" property="aaid" jdbcType="INTEGER" />
    <result column="USERNAME" property="username" jdbcType="VARCHAR" />
    <result column="SUPUSERNAME" property="supusername" jdbcType="VARCHAR" />
    <result column="LOSS" property="loss" jdbcType="DECIMAL" />
    <result column="EARNS" property="earns" jdbcType="DECIMAL" />
    <result column="GAINS" property="gains" jdbcType="DECIMAL" />
  </resultMap>
   
   <select id="selectProWinReport" resultMap="ProAccAmountMap" >
    SELECT 
    b.aaid,a.username,getSupUserName(a.supuserid) AS supusername,a.percentage,b.loss,b.earns,b.gains,b.profits
    FROM account_info a,account_amount b 
    WHERE
	a.accountid=b.accountid and a.level = #{level,jdbcType=VARCHAR} and a.offtype = '1'
	AND 
	(Date(b.starttime) BETWEEN #{startTime,jdbcType=TIMESTAMP} and #{endTime,jdbcType=TIMESTAMP}) 
	AND
    FIND_IN_SET(a.accountid, 
	   (SELECT GROUP_CONCAT(LEVEL SEPARATOR ',') FROM (
	      SELECT @Ids := (SELECT GROUP_CONCAT(c.accountid SEPARATOR ',') FROM account_info c WHERE FIND_IN_SET(supuserid, @Ids) ) LEVEL
	      FROM account_info d
	      JOIN (SELECT @Ids := #{accountid,jdbcType=INTEGER}) temp1
	      WHERE FIND_IN_SET(d.supuserid, @Ids)
	   ) temp2 )) order by a.accountid desc
     <if test="beginRow != null and pageSize !=null">
	limit #{beginRow,jdbcType=INTEGER},#{pageSize,jdbcType=INTEGER}
	</if>
  </select>
   
  <select id="selectProWinReportBytime" resultMap="ProAccAmountMap" >
    SELECT 
    b.aaid,a.username,getSupUserName(a.supuserid) AS supusername,b.loss,b.earns,b.gains 
    FROM account_info a,account_amount b 
    WHERE
	a.accountid=b.accountid and a.level = #{level,jdbcType=VARCHAR} and a.offtype = '1'
	AND 
	b.lotteryterm  = getLotteryTerm(#{time,jdbcType=VARCHAR}) 
	AND
    FIND_IN_SET(a.accountid, 
	   (SELECT GROUP_CONCAT(LEVEL SEPARATOR ',') FROM (
	      SELECT @Ids := (SELECT GROUP_CONCAT(c.accountid SEPARATOR ',') FROM account_info c WHERE FIND_IN_SET(supuserid, @Ids) ) LEVEL
	      FROM account_info d
	      JOIN (SELECT @Ids := #{accountid,jdbcType=INTEGER}) temp1
	      WHERE FIND_IN_SET(d.supuserid, @Ids)
	   ) temp2 )) order by a.accountid desc
     <if test="beginRow != null and pageSize !=null">
	limit #{beginRow,jdbcType=INTEGER},#{pageSize,jdbcType=INTEGER}
	</if>
  </select>
  
   <select id="selectAccWinReport" resultMap="AccAmountMap" >
    SELECT 
    b.aaid,a.username,getSupUserName(a.supuserid) AS supusername,b.loss,b.earns,b.gains 
    FROM account_info a,account_amount b 
    WHERE
	a.accountid=b.accountid and a.level = '9' and offtype = '3'
	AND 
	(Date(b.starttime) BETWEEN #{startTime,jdbcType=TIMESTAMP} and #{endTime,jdbcType=TIMESTAMP}) 
	AND
    FIND_IN_SET(a.accountid, 
	   (SELECT GROUP_CONCAT(LEVEL SEPARATOR ',') FROM (
	      SELECT @Ids := (SELECT GROUP_CONCAT(c.accountid SEPARATOR ',') FROM account_info c WHERE FIND_IN_SET(supuserid, @Ids) ) LEVEL
	      FROM account_info d
	      JOIN (SELECT @Ids := #{accountid,jdbcType=INTEGER}) temp1
	      WHERE FIND_IN_SET(d.supuserid, @Ids)
	   ) temp2 )) order by a.accountid desc
     <if test="beginRow != null and pageSize !=null">
	limit #{beginRow,jdbcType=INTEGER},#{pageSize,jdbcType=INTEGER}
	</if>
  </select>
   
  <select id="selectAccWinReportBytime" resultMap="AccAmountMap" >
    SELECT 
    b.aaid,a.username,getSupUserName(a.supuserid) AS supusername,b.loss,b.earns,b.gains 
    FROM account_info a,account_amount b 
    WHERE
	a.accountid=b.accountid and a.level = '9' and offtype = '3'
	AND 
	b.lotteryterm  = getLotteryTerm(#{time,jdbcType=VARCHAR}) 
	AND
    FIND_IN_SET(a.accountid, 
	   (SELECT GROUP_CONCAT(LEVEL SEPARATOR ',') FROM (
	      SELECT @Ids := (SELECT GROUP_CONCAT(c.accountid SEPARATOR ',') FROM account_info c WHERE FIND_IN_SET(supuserid, @Ids) ) LEVEL
	      FROM account_info d
	      JOIN (SELECT @Ids := #{accountid,jdbcType=INTEGER}) temp1
	      WHERE FIND_IN_SET(d.supuserid, @Ids)
	   ) temp2 )) order by a.accountid desc
     <if test="beginRow != null and pageSize !=null">
	limit #{beginRow,jdbcType=INTEGER},#{pageSize,jdbcType=INTEGER}
	</if>
  </select>
   
  <sql id="Base_Column_List" >
    AAID, ACCOUNTID, LOTTERYTERM, LOSS, EARNS, GAINS, PROFITS, starttime, overtime
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from account_amount
    where AAID = #{aaid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from account_amount
    where AAID = #{aaid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.lottery.orm.bo.AccountAmount" >
    <selectKey resultType="java.lang.Integer" keyProperty="aaid" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into account_amount (ACCOUNTID, LOTTERYTERM, LOSS, 
      EARNS, GAINS, PROFITS, 
      starttime, overtime)
    values (#{accountid,jdbcType=INTEGER}, #{lotteryterm,jdbcType=VARCHAR}, #{loss,jdbcType=DECIMAL}, 
      #{earns,jdbcType=DECIMAL}, #{gains,jdbcType=DECIMAL}, #{profits,jdbcType=DECIMAL}, 
      #{starttime,jdbcType=TIMESTAMP}, #{overtime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.lottery.orm.bo.AccountAmount" >
    <selectKey resultType="java.lang.Integer" keyProperty="aaid" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into account_amount
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="accountid != null" >
        ACCOUNTID,
      </if>
      <if test="lotteryterm != null" >
        LOTTERYTERM,
      </if>
      <if test="loss != null" >
        LOSS,
      </if>
      <if test="earns != null" >
        EARNS,
      </if>
      <if test="gains != null" >
        GAINS,
      </if>
      <if test="profits != null" >
        PROFITS,
      </if>
      <if test="starttime != null" >
        starttime,
      </if>
      <if test="overtime != null" >
        overtime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="accountid != null" >
        #{accountid,jdbcType=INTEGER},
      </if>
      <if test="lotteryterm != null" >
        #{lotteryterm,jdbcType=VARCHAR},
      </if>
      <if test="loss != null" >
        #{loss,jdbcType=DECIMAL},
      </if>
      <if test="earns != null" >
        #{earns,jdbcType=DECIMAL},
      </if>
      <if test="gains != null" >
        #{gains,jdbcType=DECIMAL},
      </if>
      <if test="profits != null" >
        #{profits,jdbcType=DECIMAL},
      </if>
      <if test="starttime != null" >
        #{starttime,jdbcType=TIMESTAMP},
      </if>
      <if test="overtime != null" >
        #{overtime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.lottery.orm.bo.AccountAmount" >
    update account_amount
    <set >
      <if test="accountid != null" >
        ACCOUNTID = #{accountid,jdbcType=INTEGER},
      </if>
      <if test="lotteryterm != null" >
        LOTTERYTERM = #{lotteryterm,jdbcType=VARCHAR},
      </if>
      <if test="loss != null" >
        LOSS = #{loss,jdbcType=DECIMAL},
      </if>
      <if test="earns != null" >
        EARNS = #{earns,jdbcType=DECIMAL},
      </if>
      <if test="gains != null" >
        GAINS = #{gains,jdbcType=DECIMAL},
      </if>
      <if test="profits != null" >
        PROFITS = #{profits,jdbcType=DECIMAL},
      </if>
      <if test="starttime != null" >
        starttime = #{starttime,jdbcType=TIMESTAMP},
      </if>
      <if test="overtime != null" >
        overtime = #{overtime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where AAID = #{aaid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lottery.orm.bo.AccountAmount" >
    update account_amount
    set ACCOUNTID = #{accountid,jdbcType=INTEGER},
      LOTTERYTERM = #{lotteryterm,jdbcType=VARCHAR},
      LOSS = #{loss,jdbcType=DECIMAL},
      EARNS = #{earns,jdbcType=DECIMAL},
      GAINS = #{gains,jdbcType=DECIMAL},
      PROFITS = #{profits,jdbcType=DECIMAL},
      starttime = #{starttime,jdbcType=TIMESTAMP},
      overtime = #{overtime,jdbcType=TIMESTAMP}
    where AAID = #{aaid,jdbcType=INTEGER}
  </update>
</mapper>